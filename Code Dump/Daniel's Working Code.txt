#define ARM_MATH_CM4

#include "main.h"
#include "GPIO/GPIO.h"
#include "arm_math.h"
#include "Console/Console.h"
#include "I2S/I2S.h"



I2S_Config SoundAcq;
uint8_t OUT_ARRAY[3000];
int16_t MIC_DATA_IN[8192];
int16_t MIC_DATA_LEFT[4098];
float32_t in_fft[4098], out_fft[4098];

arm_rfft_fast_instance_f32 fft_handler;

int main()
{

	__disable_irq();
	int32_t L1;
	MCU_Clock_Setup();
	I2S_Clock_Init();
	Delay_Config();
	SoundAcq.I2S = I2S1;

	GPIO_Pin_Setup(GPIOB, 1, GENERAL_PURPOSE_OUTPUT_PUSHPULL, NONE);
	GPIO_Pin_Setup(GPIOB, 0, GENERAL_PURPOSE_OUTPUT_PUSHPULL, NONE);


	Console_Init(USART1, 230400);





	RCC -> APB2ENR |= RCC_APB2ENR_SPI1EN;
	GPIO_Pin_Setup(GPIOA, 4, ALTERNATE_FUNCTION_OUTPUT_PUSHPULL, I2S1_WS);
	GPIO_Pin_Setup(GPIOA, 5, ALTERNATE_FUNCTION_OUTPUT_PUSHPULL, I2S1_CK);
	GPIO_Pin_Setup(GPIOA, 7, ALTERNATE_FUNCTION_OUTPUT_PUSHPULL, I2S1_SD);
	GPIO_Pin_Setup(GPIOA, 6, GENERAL_PURPOSE_OUTPUT_PUSHPULL, NONE);
	GPIO_Pin_Low(GPIOA, 6);
	SPI1 -> I2SCFGR |= SPI_I2SCFGR_I2SMOD
			        | 3 << 8
					| 0 << 4
					| 0 << 1
					| 0 << 0;
	SPI1 -> I2SPR = 56;
//	SPI1 -> I2SPR = 5; //48KHz
	SPI1 -> I2SPR |= 1 << 8;
	SPI1 -> I2SCFGR |= SPI_I2SCFGR_I2SE;
	SPI1 -> CR2 |= SPI_CR2_RXDMAEN;
	NVIC_EnableIRQ(SPI1_IRQn);

	__enable_irq();

	while(1)
	{
		if(complete_array == 1)
		{
			GPIO_Pin_High(GPIOB, 0);
			complete_array = 0;
			for(int i = 0; i < 1024; i++)
			{
				printConsole(USART1, "%d\r\n",inData[i]);
			}
			GPIO_Pin_Low(GPIOB, 0);
		}


	}

}


//void SPI1_IRQHandler(void)
//{
//	GPIO_Pin_High(GPIOB, 1);
////	while(!(SPI1-> SR & SPI_SR_CHSIDE)){}
//	inData[counter] = SPI1->DR;
//	counter++;
//	if(counter == 1024)
//	{
//		counter = 0;
//		complete_array = 1;
//	}
//	GPIO_Pin_Low(GPIOB, 1);
//}

