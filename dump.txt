void DMA_Init(DMA_TypeDef *DMA, DMA_Stream_TypeDef *Stream, uint8_t channel,
		uint32_t *Source_address, uint32_t *Destination_address)
{

}

void I2S_Clock_Setup(void)
{
	RCC -> CFGR &= ~RCC_CFGR_I2SSRC;
	RCC -> PLLI2SCFGR |= (PLLI2S_R << 28) | (PLLI2S_N << 6) | (PLLI2S_M << 0);
}


void I2S_Pin_Setup(void)
{
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
	RCC -> APB2ENR |= RCC_APB2ENR_SPI1EN;
	GPIOA->MODER |= GPIO_MODER_MODE4 | GPIO_MODER_MODE5 | GPIO_MODER_MODE7;
	GPIOA->OTYPER &= ~(GPIO_OTYPER_OT4 | GPIO_OTYPER_OT5 | GPIO_OTYPER_OT7);
	GPIOA->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4 | GPIO_OSPEEDER_OSPEEDR5 | GPIO_OSPEEDER_OSPEEDR7;

	GPIOA->AFR[0] |= GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_0;
	GPIOA->AFR[0] |= GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_0;
	GPIOA->AFR[0] |= GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_0;

}

void I2S_Setup(void)
{
	SPI1->I2SCFGR &= ~SPI_I2SCFGR_I2SE;
	SPI1->I2SCFGR |= SPI_I2SCFGR_I2SMOD;
	SPI1->I2SCFGR |= SPI_I2SCFGR_I2SCFG_1 | SPI_I2SCFGR_I2SCFG_0;
//	SPI1->I2SCFGR |= SPI_I2SCFGR_I2SCFG_1 ;
//	SPI1->I2SCFGR &= ~(SPI_I2SCFGR_I2SSTD); //phillips standard
//	SPI1->I2SCFGR |= SPI_I2SCFGR_DATLEN_1; //32 bit
	SPI1->I2SCFGR |= SPI_I2SCFGR_DATLEN_0;
	SPI1->I2SCFGR |= SPI_I2SCFGR_CKPOL;
	SPI1->I2SPR |= 0x30c;
	SPI1->SR = 0x00;
	SPI1->CR2 |= SPI_CR2_RXDMAEN;
	SPI1->I2SCFGR |= SPI_I2SCFGR_CHLEN;
	SPI1->CR1 |= SPI_CR1_MSTR;
	SPI1->I2SCFGR |= SPI_I2SCFGR_I2SE; //Enable i2s peripheral
	SPI1->CR1 |= SPI_CR1_SPE;
}

void DMA_Init()
{
	DMA2_Stream2->CR |= DMA_SxCR_CHSEL_1 ; //CHANNEL 3
	DMA2_Stream2->CR |= DMA_SxCR_PL; //VERY HIGH PRIORITY
	DMA2_Stream2->CR |= DMA_SxCR_MSIZE; //32 BIT MEMORY SIZE
	DMA2_Stream2->CR |= DMA_SxCR_PSIZE; //32 BIT PERIPHERAL SIZE
	DMA2_Stream2->CR |= DMA_SxCR_MINC; //MEMORY INCREMENT
	DMA2_Stream2->CR |= DMA_SxCR_CIRC; //CIRCULAR MODE
	DMA2_Stream2->CR |= DMA_SxCR_DIR_0; //PERIPHERAL TO MEMORY
	DMA2_Stream2->NDTR = 3;
	DMA2_Stream2->PAR = (uint32_t)&SPI1->DR;
	DMA2_Stream2->M0AR = (uint32_t)&RxBuff;
//	DMA2_Stream0->FCR = DMA_SxFCR_FTH;
	DMA2_Stream2->CR |= DMA_SxCR_EN; //STREAM ENABLE

}

//		Fs = 48
	int		PLLI2S_M = 25;
	int		PLLI2S_N = 384;
	int 	PLLI2S_R = 5;
	int RxBuff[3]={0xAA,0xBB, 0xCC};
//		PLLI2SCLK = 76.8 MHz
